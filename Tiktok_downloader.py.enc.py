
import base64
from cryptography.fernet import Fernet

# Obfuscated decryption key
obfuscated_key = 'YmpEa0ZnMVpxbEtIbjNpNmMzYW0tQzMtSHJQc3E0RlNzaFJlekRQMl9Lbz0='

# Decode the key
key = base64.urlsafe_b64decode(obfuscated_key.encode('utf-8'))

# Encrypted script
encrypted_script = b'gAAAAABml3qB7iYJPK5ZnOr6y6ArGlGzB2B-EWU85_kUoE5nco3g18D7bRHlmZnvgqkBQZsjzr9-6fBFIdECokZMOKobxFwhBCZdVr0y4F-EPpvbdUs4dL1mt-SqULEAxGD_QCJqzrNZJcZItaAruvUl9VKqnLm46mV7tufOKq4SdSNKNaAQg87lMC-Z5JotyNH3-68YTx3xsNVv53SYcZ2Me-ZOzCq3yBfGZ6kuYWCyELEd92xW_Ju5SIicPLgSl0lywRUDFyUpQE-tPu76-xZzQ1CTDeaH3k-fHxVqhX31zWwJEEy4-u6pAyMpMFjrPcNA7i_O8pa37Of1agZuy6ZzLLViSEfaWJt-33R8eEJctp1AHbp7p7grXf0GMSUj-d01gA9BjU7_HfWgZxkHWcXm-GwBIEkGm4OTU9kzfCcdRKwjvbS6ub5yzUvQ843ppI_1K5FD9D1-ZAVEyXI6ywezSA7YvNzVzWwfjuCR_kRIgVHbTVWQvWwui-Fe3wD4q3TVN2yhQ_7pgOn5TpM3N_v6_9HmfATkF2oW1qKDF8sd7Uvqcx9cRM-zofSILnhj0FsSa84CdypEDrhOda8oyQUWHu3WQVJ8CIEQchiMsnhsvuZl4Ed-3LW0BgP9sjikR3ECRlyQPNTdTvkb63K1y7Ne2QjZ4-jeVuHzZBh4d4gnLeXzqxFxL24xVBz3Z53oq6WTbDi22Lnsen55euwvFeRxPm6WCL8GbPN5U497z4_PZlOp3ZLB8CKYeD_raiiWvZgBLucKCKMwgkUC4rMtmACupabSNEv6iI6nsxgsIs-FaqOtuKJ9Ecy7QkBm00UxcnXsCb1syhf3SCXfEmEIxo1KKqYgeI5WKqx3eX5mEQvb15aWj4jaiKFGORd8Gw9qiHSyicMDDhaFk8g14kNFg_BvCH9By3FO60rYcsvNLoyHlxlVFIH32adems4HfMwEzP-IZfmyhM-YVfH-HLKQ_LrtjflKS4T5ifrOmqQ2p_8KNv0zTaZJRGDJep6F0vGKupd2ZQahYWkH2beZRdVR3M9IGjQBP5vTmzwWTwAQBc7xwtLGXwLF4-n6-ahD-ea1WtIgH9uuyJYZB4_hANo1fUn__HwapwSlzP1U-caqwBiSneqdFsNS-8Uy_sk3gebXmLrip-xjChcn0S0Ber2FasuoaArcJxiB1pNoOmiZMmUYjO8SXMnLV9pGMQqBP8ZMCpZ74kGzeZhYm41hN-qjn316F6DF0BIb9EJiV_xdmrya0E-beFGZIpcQeH4jJ7wk3MtHhZJSKlqyYpomuzbEQh5K0aqoyqPn9iKKmlOUpimzEjfQOmTX9csMQUVi2DeyRP6oiJSxMOVxkeqYnV0QcCZA4PLVAeHpi98QaII-ICoRDAVY0Ia7Sjlm5yJ6msse0yWgjhHcKcaj0wHeoEs30vFoGn6RAuwSIOashuJDcXD7ie_P6eP2DeY6BR6Zg96Mw2HKc4tJ5LyD2NCJLQAhdNxaStP_MNQuucHoDgZDcN55odvFp4vrn4gEhIVcy1MHeHcRCV0p13LzLDlRv3xfX9c-owjS7fUqKfQ7mj_RGiYkbi-QQKvk5Z8x-g41UgBGBDqSIyowcmS1B7CLLq5kZzYl_uem24Qrm_vWBgDeGFqNMH_cid_hKPfxv484h0M4hDHhqmEGMa7hTyadDmtnny6nhmLaDmDhgDE8pfKLPfS5v_3yGSRv46NC_SSpET_TYxz-TYGJe0Q_fzb3Ql3PZPCDC78B6byGAKSe4o-Wrcw_NbcyoTOukeEiaAUR3N40ReOh5hETvrPCGEdIQ1UHAXZ06PKj1to19yhJ510suH16nF0K37INrtY6d3GZD_umZM_fjWOkwF5Gqmx8s6fMdlBuyhAaOQLxRasO8SIHWz0jRHcMdwXl8WGYCY2eeC2FsJp9NhBE1twc0VZLA2irOTqfaQYtc9n6aGP_Pi7287wc7yKNpA_30-76Z5OStzRJDygSsXAlW3oqytawcVL4H-H0DLkzs_4GeXJeSFVva_Quwwnc6Rw-_TCK2fzmhl9dTI0mav2IHMTLFwipMVqAr8wBH7Yqp6dLX57NpP08GYaBb2wvoEaEARyKs0i0FrOBnqIcIBv0U_DRZHS1Y32B9btvq-y-l-X_UHIV30vl4T6ut2x7EOar_odEGNwjgDzg18Df0HvVuQC-9JVpk5BT3cp15WYE1Hge766pkxuij_l3X41UCiqMIFCdYOo1snghGJyYRoTisEjUswJnFzRm-9wASERTbFI6CKJE8sq7aS1nHZXcZ2te_VDfpzNX-g8wB0OhzTc7g4oOhHRYN15xXvptNXx_02NhHQU32ZWd4JgOdwB6xKLHsffK7c76GXFlSIKuZiKbioTWsfT6eBTMxDG9h1EYbHOzkDF5KOR28c-5puKtNVv9CpRh5Aspwa-ZjO-UzN2SGQgU43V5tLMES0QoppPw7dDEYWjiyqJlRzxbVyQbN1XRmVNkY6ttHz5irQJk-JeYNW4voeTeIEnrRnJ2PpJcrmNP5y6wiDKQXTDyjDoNFurdZVh7AqZERZmnwsH3sv87wE6X1kMFpJplh9Hj6T6cnna1WwknbYPUbBfFiCbxfsPT6ko2NJ4GKz4jFpxQ0DtPvOe4CVriyHKA8nU4m2GrhF7yPbdgvUdN9_jTxyMQ2RIqApGc8yr3ygF_fMBIXfQ-eJhhPkj8aca84hF61B18BZOQ24sVBXMTiqxJMqJ-YZMGXl9sMlc3RUbr1XQmWXq2w9qyg44C4TcUTcF-lr8bYmJCn8v3irFMunX-fbtFIMV2LPiheM2JkyXIe4XX0R24scgQxP8f7vImvVSMN5wymMAesupg_U0BcxGvIK43AIUHSTJxnmA4R9WZFUTB51Nh-TuV8gC1pmtzjEbnAF2K2C8w4G8lq44-nelkh330kehG1hMRbA9Xg4-PSA-d7BTWBYylAnNaCOkVN5EZMNGB1pcXyYYNm6TLZC5G37OFxF3FxzJEXwQusb3OPE9sEBEpF0jL390gZTVBSt9Sp_yb7c_4xN2X8tWjvjkumlLCyPku_EUqv7ydZRXWmCyuZgO0ukofbkREvJDL6-2rK63UzvAJ9F7XJ69oacoMvy2zxz4VH677KKi-qWnflDlkwHB6r8obWlGAi287-byMMoaEnz2ps9m2rx7j_cRS6EBeXaNLDPdR8dpslx92l32mfXTAlcpOSTCeAhoM6nfFGGgvzFeEf8lFUecaqjpi58a61U-VH2oNnATmrlJOP_Ig_DApyFIeJfRPHZ49UnzJCcZCduljYoSjr07Ij4ehP1BOw2FMxwUB2kIS6ewesIaSCAAIf3-pUdj-Ji9xt3f7dyc2v7MuOrOiuoaQYqsQTaPaQCMNzHXtG_G_knq9wkDYj-qAy1NOdsC-GWGi_zOrNFqxPX0KsCAK77Us7kziMD6DRZSNcLwQ5znh4TmZXbgAyK02RCLpp_ZZcCduTWIaSMmnw9RWyzuDr7D8JkAsX8Qx0bbcPd0vB-ikyLqnLIBe4hh2m4fnSYA5cOUYp-OR3F4rd8MfDjl03unYr7UJ_7XPVvos6fJswPd-91zeyIlFhiKId-d4Zl79wg7MCYM8v4dnsIfyKKz71CXshIdytBrFem4plim0IEyK4adn4jijfRgmIFpyZfOVGajxqxTGVqoW4JC2PCh2_yYWuoBXnU5betD_e0OW0wdHD0wJB5zTvIv6yRhi2vNSMBx6VWhEWeYL6_xEMGQNB1WcuLL7SHdprlXe7ZQS3Gxnj9KPxxfbg-E2McaoAop7BLIeXc5GObCgCcII0ZaZ0TQk-VvwQE7fz6JJCYNQDLk5LP9glYThTLyXyl_nJ5l0bDNBjvX8jQo798yr6Mt_fChYc0zo5ukoCF3XonEVPZmL6MA4VQUfUNu1Qnd7jcPLKu06MWVwY0c9TL59c-QvjkrKM7cYr--d6C3eQBM8GmtGJMVeoREWAjAFzQ3naQX8I5BQK6F5LkTKuoLUIKs3l3qgPBPeEYnsIklnbXV_dSnsPQjkTXG2b1csHj1k1LX-4cz4cFO83vjfQqXBoq5DNDWF_Z2yef9ToLyjUTw30TeQUfuh16l-VFnlK2oRaGwRZJiR1vmyW7DPFC6dNTIL-SKbOUi-g49P2yqyAK6Moo8EHqX51JkB8UHnTsn0hrJ2w1ApUivx7kcha6FO9EGaqbsMoc2gQC5gyQcoJCnc805fzyyiMoU7YEaj2XAbf_6cWt1XblDpDeeEgJa_BFdWZ7z3TsGb7-jf8cLGCaWyiKT7rM-yIiozvC7-4VXBQkP4vVsiZxcxFNaAaGbpDLP5aJ8d8mAa7GCX7ZQCeisAcpeo7GKJ67mXMSEg77ZfJKG_qXOL4ixuZhwvel1ml3dnxGpjDUvxJkWoFs5Ibhnp66mmNu5qGKy0tpRfaw1Gs0G6-6wzrEBk6fC4pD3mtBEVk7xQFZfFR5dGoZZFrPU1JkvJ7fY-cA1r3mybwJFVBfDOrjRDTlSDneAtQJUHebViab0HqRFQRiMIvs74zrvuHMOVKJslYYXnL0wpt4z5v2A1HzA5lCOSPmX_4hgMuYrobGTnbGXMF4xClknEiEJPYThXFtLy5K-tjy5NdUNmvA4SOX8vf5f4-33zGF9qlakQmgjG1qJwqz_IlCRgc29pPt9LifQnaH6JgqGP3BPb5bbb2c5_XCVjyJeMgifhPr9yzSQ2glxI4lB9C2ahS64sGh5pLjKLNY1YDKXnWcohXH6E5NWE9l9YZ0v4ty28EPCjKPfP0gg4GMNaQpzt6EGU2azCT-6r2iJYY0yy1d-WjEMJ6CbtsyG5P6xYh_e3DcBJEvbuyfFFxNueDYxFOqIobsVBR6tpSTF-Ex26lmNf2A7Z1IteEM2VZMvb95tf8ZvLXQfek7hhYPaP8euLmHtfsdIpdJFrwfcDznu2mK_IICE1BBgEdfy_fGGxDahC1RxsAE5oXcTHd6Fn_dWa77-whuKjtG5Ue7sImh8CNvQmuGnemUBxwnfZraQRz4kuPb_yk07zt7ImZUwcYfAVXewZglmjXFZFGiQ7MlJwt4hJ81yA4Q3QVxI-S4RC1WnYTL1YaF6ncwoJjHQol-dvpMwCsamf77cZKVT5WfGYBM31lVf-yVYcocQbJl6X4zrq-wIY69EHlUgijo_jkJJNb29-YPVOaAR2-BuZ1j1tNMNfZiztFx_Fh_Oz-u3O-FItB7MrAK5roYF-ApZM1aHcIY4g9KVYshoBrqUJBjHUQihKNuR1GcjxREC5sdeCfJTyjBUcdN6zgbMsZrikZQKpEB_XEncqnJQwtrc9BPmksS3dZB4SQp7NAhmV-vG8-XXTS5Oyh5QcZPVA0xIJRKi0XtIBc6IWCBa9vJZRz8GgFnATfEh7y1WoIC-CFrB9fCJ1sY4YuX6zVtMQamsjPmVEidaACtPJw6HSha_EioknkN8ya36DlcxP_Eh4xTB_Rn2JNME79zlxb0vAZNzIShuXyC91qLS93K5Z81Y7o2oAfKKujYuPPCJmlpgjl4BiwfcKXtD_9bO34WtTNDvINOhl0ll0N-JIR_SUg1hNEkxl5vI96TU843tfNtiXOWsSeRpLXjHPnv0XpSSZmREUrrUuBx3XH-X299vGRCEftD-Mvyo8MQlTbJ3RAj8Bux_NLg_UglCNUjw9OGDeVogilL7kQs9Ux9zvh8xybK2Oeu01f7m0GHfJ_3uCJQ4duDa7Mz6xG-wm8x5NmOZV9o4HuWg6eZ3uLA5AUmPU4ev5bOq4wwaAttKLJBQrLEJSK-UT7KOBrq4P_GBOMwToFJT7_QerrAc5b4R144JYMex5ouMraDEnv2LRfXcDnF3ju34HJtOjSY9K3Vzy-eAJtYvVQm7z8Vtwq8Ps7griUR-L9IMITdjaqQXCeO8xcOuMfRBkVESC3FLg4AiYDMqU339bINqrjnWVX3Sxso91y4yM_Xu1A-CvoSJLHlrV3Ntt0edUn1DoeijAvG2mpSFBNbYobybm6l_c4NnJ30NhPiqnalsCDyY2s3gbPgJSYEpMlUIUWP2kko2R6gyzeFkd6Vpb6wqN8p5mOAL2j6ZEQv-RJxOMjEZg600CLcdHKaR5bi6UdCl1OwM8DvGQfbFrblKE6jhJ9kVt5em_C1mROZT9hhOjsd20Cpu8ln_sneX47QxTurt5LIDg5x3nBw7HHexzJ6k4Xi6-y7MTnc6JD1-g59fJpxIRhUETJHMI2_sjUOCAj93gLSc43e_Cue7pOKMBIwrCiszZnfFgrMfY_M0149of1w4XOahvuKrcXWyHKWo0aNQcuuP82MeINefbWyThSPCBBvGaBI5aO_IKKzavvo6qX5JcuUsm1fIgznxKWBYkq61F5bCJ3l9CHkk9MFlF6ZQEoqoZ0ZJYB_l-o9CCZWg4v7agFhexrocsc86h73hi8pjklzo3muvXAHnwFFukVDzXYyPfGjzSMjViMBpEGb6fBe-0OQf04Au1LDudE1Obf_nDNM98s5C3Xb1RTx-6YZ-N-ViR5ioUYq15lKf2r5g9IQGLXvkxcRTTDv-j0qu73YtkZkSXQxuLZ4RhBCWC86VG0wZHd5CxeBFOF5mEYu422kJ7MqQuAqVOgKObUOJdhXRw2ycFwcheH27LoDHs24stKgsMRNSAd9XWEy15sJhm7rhHupj31ofChrdsAwHKER6uPkPEzYMXS5rnklWFfeLvb8g='

# Decrypt and execute the script
fernet = Fernet(key)
decrypted_script = fernet.decrypt(encrypted_script)
exec(decrypted_script)
